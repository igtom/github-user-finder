{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/services/dark-mode.service.ts","./src/environments/environment.ts","./src/app/services/user-finder.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/card/card.component.html","./src/app/components/card/card.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DarkModeService } from '../../services/dark-mode.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  constructor(public switchMode: DarkModeService) {}\n\n  title: string = 'Github Search';\n  isChecked: boolean = false;\n\n  ngOnInit(): void {\n    this.switchMode.detectMode();\n  }\n}\n","<mat-toolbar class=\"nav-container\">\n  <h1>{{ title }}</h1>\n  <div class=\"switcher\">\n    <button mat-icon-button>\n      <mat-icon [ngClass]=\"{ light: !switchMode.isDark }\">light_mode</mat-icon>\n    </button>\n    <mat-slide-toggle\n      (change)=\"switchMode.switchMode()\"\n      [checked]=\"switchMode.isDark\"\n    ></mat-slide-toggle>\n    <button mat-icon-button>\n      <mat-icon [ngClass]=\"{ dark: switchMode.isDark }\">dark_mode</mat-icon>\n    </button>\n  </div>\n</mat-toolbar>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DarkModeService {\n  isDark = JSON.parse(localStorage.getItem('isDark'));\n\n  detectMode() {\n    var getMode = JSON.parse(localStorage.getItem('isDark'));\n    if (getMode) {\n      document.body.style.backgroundColor = '#141c2f';\n      document.body.style.color = 'white';\n    } else {\n      document.body.style.backgroundColor = '#fff';\n      document.body.style.color = 'black';\n    }\n  }\n\n  switchMode() {\n    this.isDark = !this.isDark;\n    localStorage.setItem('isDark', JSON.stringify(this.isDark));\n    if (this.isDark) {\n      document.body.style.backgroundColor = '#141c2f';\n      document.body.style.color = 'white';\n    } else {\n      document.body.style.backgroundColor = '#fff';\n      document.body.style.color = 'black';\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserFinderService {\n  constructor(private http: HttpClient) {}\n\n  URL: string = 'https://api.github.com/users';\n\n  getUser(name): Observable<any> {\n    return this.http.get(`${this.URL}/${name}`);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  constructor() {}\n}\n","<div class=\"container\">\n  <app-header> </app-header>\n  <app-card></app-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { MatCardModule } from '@angular/material/card';\n\nimport { CardComponent } from './components/card/card.component';\n\n@NgModule({\n  declarations: [AppComponent, HeaderComponent, CardComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatCardModule,\n    MatInputModule,\n    MatSnackBarModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","<div class=\"container\">\n  <div>\n    <form class=\"form-control\" (ngSubmit)=\"getUserInfos(searchTerm)\">\n      <input\n        required\n        type=\"text\"\n        placeholder=\"Search..\"\n        name=\"searchTerm\"\n        [(ngModel)]=\"searchTerm\"\n        value=\"{{ searchTerm }}\"\n      />\n      <button type=\"submit\"><i class=\"fa fa-search\"></i></button>\n    </form>\n  </div>\n  <div class=\"card-container\">\n    <mat-card class=\"card\" *ngFor=\"let user of foundUser\">\n      <mat-card-header class=\"card-header\">\n        <img mat-card-avatar class=\"card-avatar\" src=\"{{ user.avatar_url }}\" />\n        <div>\n          <mat-card-title>{{ user.name }}</mat-card-title>\n          <a href=\"#\">@{{ user.login }}</a>\n        </div>\n      </mat-card-header>\n      <div mat-card-content>\n        <mat-card class=\"repo-card\">\n          <mat-card-content class=\"repo-content\">\n            <div>\n              <h2>Repos</h2>\n              {{ user.public_repos }}\n            </div>\n            <div>\n              <h2>Followers</h2>\n              {{ user.followers }}\n            </div>\n            <div>\n              <h2>Following</h2>\n              {{ user.following }}\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n      <mat-card-content>\n        <p>\n          {{ user.bio || \"No Bio\" }}\n        </p>\n      </mat-card-content>\n      <div class=\"footer\">\n        <div>\n          <button mat-flat-button>\n            <mat-icon>place</mat-icon>\n            {{ user.location || \"No Data Available\" }}\n          </button>\n          <button mat-flat-button>\n            <mat-icon>business</mat-icon>\n            {{ user.company || \"No Data Available\" }}\n          </button>\n        </div>\n        <div class=\"links\">\n          <button mat-flat-button>\n            <mat-icon>view_list</mat-icon>\n            {{ user.blog || \"No Data Available\" }}\n          </button>\n        </div>\n      </div>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserFinderService } from '../../services/user-finder.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent implements OnInit {\n  constructor(\n    public finder: UserFinderService,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  searchTerm: string = '';\n  foundUser = [];\n  noUser = false;\n  durationInSeconds = 3;\n\n  ngOnInit(): void {}\n\n  getUserInfos(searchTerm) {\n    if (searchTerm) {\n      this.finder.getUser(searchTerm).subscribe(\n        (user) => {\n          this.foundUser.shift();\n          this.foundUser.push(user);\n          this.searchTerm = '';\n        },\n        (err) => {\n          if (err.status === 404) {\n            this._snackBar.open(\n              `No User with Name: ${this.searchTerm} found`,\n              'Close',\n              {\n                duration: 5000,\n              }\n            );\n          }\n        }\n      );\n    }\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}